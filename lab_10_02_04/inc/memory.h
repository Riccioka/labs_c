#ifndef _MEMORY_H
#define _MEMORY_H

#include <stdio.h>
#include <stdlib.h>

#include "struct_list.h"
#include "errors.h"

int list_push_front(node_t **head, int data, int degree);
//добавление элемента в голову списка
//принимает на вход указатель на начало списка и данные элемента
//возвращает код ошибки
//(создает элемент с помощью node_create и перемещает на него указатель начала списка)

int list_push_back(node_t **head, int data, int degree);
//добавление элемента в хвост списка
//принимает на вход указатель на начало списка и данные элемента
//возвращает код ошибки
//(создает элемент с помощью node_create и перемещает на него указатель конца списка)

node_t *node_create(int data, int degree);
//создание элемента
//принимает на вход информационную часть элемента
//возвращает указатель на элемент
//(выделяет память под элемент и инициализирует его параметрами data и degree)

void free_list(node_t **head);
//освобождение памяти из под списка
//принимает на вход указатель на голову списка
//(освобождает каждый элемент списка, а затем указатель на его начало)

char *allocate_malloc_string(int len);
//выделение памяти под строку
//принимает на вход длину строки
//возвращает строку

void free_malloc_string(char **str);
//освобождение памяти из под строки
//принимает на вход указатель на строку

#endif